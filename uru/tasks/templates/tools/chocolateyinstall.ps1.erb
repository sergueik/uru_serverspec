try {
  $packageName = '<%= data[:name] %>'
  $url = '<%= data[:prg_url] %><%= data[:name] %>/downloads/<%= data[:name] %>-<%= data[:ver] %>-<%= data[:platform][:x86] %>'
  $installDir = $(Split-Path -parent $MyInvocation.MyCommand.Definition)
  $checksum = '<%= data[:chksm] %>'
  $checksum64 = '<%= data[:chksm64] %>'
  $checksumType = '<%= data[:chksm_typ] %>'
  $checksumType64 = $checksumType

  $chocoBinDir = Join-Path $env:ChocolateyInstall 'bin'

  # install uru package and extract uru_rt.exe to package `tools` dir
  Write-Host "---> Downloading and extracting uru runtime"
  Install-ChocolateyZipPackage "$packageName" "$url" "$installDir" `
                               -checksum $checksum -checksumType $checksumType `
                               -checksum64 $checksum64 -checksumType64 $checksumType64

  # create chocolatey specific .bat/.ps1 uru runtime wrapper scripts in the
  # chocolatey bin dir that is on PATH
  Write-Host "---> Creating .bat and .ps1 uru wrapper scripts in $chocoBinDir"
  $bat = @"
@echo off
rem autogenerated by uru

set URU_INVOKER=batch

"$(Join-Path $installDir 'uru_rt.exe')" %*

if "x%URU_HOME%x"=="xx" (
  if exist "%USERPROFILE%\.uru\uru_lackee.bat" (call "%USERPROFILE%\.uru\uru_lackee.bat")
) else (
  if exist "%URU_HOME%\uru_lackee.bat" (call "%URU_HOME%\uru_lackee.bat")
)
"@

  $ps = @"
# autogenerated by uru

`$env:URU_INVOKER = 'powershell'

$(Join-Path $installDir 'uru_rt.exe') `$args

if (`$env:URU_HOME) {
  if(Test-Path "`$env:URU_HOME\uru_lackee.ps1"){ & `$env:URU_HOME\uru_lackee.ps1 }
} else {
  if(Test-Path "`$env:USERPROFILE\.uru\uru_lackee.ps1"){ & `$env:USERPROFILE\.uru\uru_lackee.ps1 }
}
"@

  @{'uru.bat' = $bat; 'uru.ps1' = $ps}.GetEnumerator() | %{
    $sw = [System.IO.StreamWriter] "$(Join-Path $chocoBinDir $_.Name)"
    $sw.Write($_.Value)
    $sw.Close()
    $sw.Dispose()
  }

} catch {
  Write-Host "---> error while uninstalling uru"
  throw $_.Exception
}
